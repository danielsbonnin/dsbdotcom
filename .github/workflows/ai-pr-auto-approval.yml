name: AI PR Auto-Approval

on:
  pull_request:
    types: [opened]
    branches: [main]

jobs:
  auto-approve-ai-pr:
    name: Auto-approve AI Generated PRs
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.title, 'ü§ñ AI Implementation')
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run AI PR Approver
        run: |
          echo "ü§ñ Running AI PR Approver for PR #${{ github.event.pull_request.number }}"
          node pr-approver-agent.js ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Auto-merge
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            
            // Check if PR was approved
            const reviews = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
            
            const isApproved = reviews.data.some(review => review.state === 'APPROVED');
            
            if (isApproved) {
              console.log('‚úÖ PR approved by AI - enabling auto-merge');
              
              // Add comment about auto-merge
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: `ü§ñ **AI Auto-Approval Complete**\n\n‚úÖ This PR has been automatically approved\nüîÑ Auto-merge enabled - will merge when CI passes\nüöÄ Deployment will start automatically after merge`
              });
              
              // Try to enable auto-merge
              try {
                const pr = await github.rest.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: prNumber
                });
                
                const mutation = `
                  mutation EnableAutoMerge($pullRequestId: ID!) {
                    enablePullRequestAutoMerge(input: {
                      pullRequestId: $pullRequestId,
                      mergeMethod: SQUASH
                    }) {
                      pullRequest {
                        autoMergeRequest {
                          enabledAt
                        }
                      }
                    }
                  }
                `;
                
                await github.graphql(mutation, {
                  pullRequestId: pr.data.node_id
                });
                
                console.log('üîÑ Auto-merge enabled successfully');
                
              } catch (error) {
                console.log('‚ö†Ô∏è Could not enable auto-merge:', error.message);
              }
            } else {
              console.log('‚ùå PR not approved - skipping auto-merge');
            }
