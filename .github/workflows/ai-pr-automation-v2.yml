name: AI PR Automation Pipeline

on:
  pull_request:
    types: [opened]
    branches: [main]

concurrency:
  group: ai-pr-automation-${{ github.event.pull_request.number }}
  cancel-in-progress: false

env:
  NODE_VERSION: "20"

jobs:
  detect-ai-pr:
    name: Detect AI-Generated PR
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'github-actions[bot]' || contains(github.event.pull_request.title, 'ü§ñ AI Implementation')
    outputs:
      should-auto-approve: ${{ steps.check.outputs.should-auto-approve }}
      pr-number: ${{ steps.check.outputs.pr-number }}
    permissions:
      pull-requests: read
      contents: read
    steps:
      - name: Check if AI-generated PR
        id: check
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const isAIGenerated = pr.user.login === 'github-actions[bot]' || 
                                 pr.title.includes('ü§ñ AI Implementation') ||
                                 pr.body.includes('Generated by AI Agent');
            
            console.log(`PR #${pr.number}: ${pr.title}`);
            console.log(`Author: ${pr.user.login}`);
            console.log(`Is AI Generated: ${isAIGenerated}`);
            
            core.setOutput('should-auto-approve', isAIGenerated.toString());
            core.setOutput('pr-number', pr.number.toString());
            
            return isAIGenerated;

  ai-review-and-approve:
    name: AI Review & Approval
    needs: detect-ai-pr
    if: needs.detect-ai-pr.outputs.should-auto-approve == 'true'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
      checks: read
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install GitHub CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run AI PR Approver
        id: approve
        run: |
          echo "ü§ñ Running AI PR Approver for PR #${{ needs.detect-ai-pr.outputs.pr-number }}"
          node pr-approver-agent.js ${{ needs.detect-ai-pr.outputs.pr-number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-merge if approved
        id: merge
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ needs.detect-ai-pr.outputs.pr-number }};
            
            try {
              // Check if PR was approved
              const reviews = await github.rest.pulls.listReviews({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              
              const approvedReview = reviews.data.find(review => 
                review.state === 'APPROVED'
              );
              
              if (approvedReview) {
                console.log(`‚úÖ PR #${prNumber} was approved. Attempting auto-merge...`);
                
                // Comment about auto-merge activation
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: prNumber,
                  body: `ü§ñ **AI Approval & Auto-merge Activated**
                  
‚úÖ This PR has been automatically approved by the AI agent
üîÑ Auto-merge is now enabled - will merge when CI checks pass
üöÄ Deployment will begin automatically after merge

**Timeline:**
- ‚úÖ AI Implementation completed
- ‚úÖ AI Review & Approval completed  
- üîÑ Waiting for CI/CD checks to pass
- ‚è≥ Auto-merge pending
- ‚è≥ Deployment to production pending`
                });
                
                // Enable auto-merge via GraphQL
                const mutation = \`
                  mutation EnableAutoMerge($pullRequestId: ID!) {
                    enablePullRequestAutoMerge(input: {
                      pullRequestId: $pullRequestId,
                      mergeMethod: SQUASH
                    }) {
                      pullRequest {
                        autoMergeRequest {
                          enabledAt
                        }
                      }
                    }
                  }
                \`;
                
                // Get PR GraphQL ID
                const pr = await github.rest.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: prNumber
                });
                
                try {
                  await github.graphql(mutation, {
                    pullRequestId: pr.data.node_id
                  });
                  console.log(`üîÑ Auto-merge enabled for PR #${prNumber}`);
                  
                } catch (mergeError) {
                  console.log(`‚ö†Ô∏è Could not enable auto-merge, trying direct merge: ${mergeError.message}`);
                  
                  // Fallback: try direct merge if checks are passing
                  const checks = await github.rest.checks.listForRef({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    ref: pr.data.head.sha
                  });
                  
                  const allChecksPassed = checks.data.check_runs.length === 0 || 
                    checks.data.check_runs.every(check => 
                      check.status === 'completed' && check.conclusion === 'success'
                    );
                  
                  if (allChecksPassed) {
                    await github.rest.pulls.merge({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      pull_number: prNumber,
                      merge_method: 'squash'
                    });
                    console.log(`üéâ PR #${prNumber} merged successfully!`);
                  } else {
                    console.log(`‚è≥ Waiting for CI checks to complete before merge`);
                  }
                }
                
              } else {
                console.log(`‚ùå PR #${prNumber} was not approved - skipping auto-merge`);
              }
              
            } catch (error) {
              console.error(`Error in auto-merge process: ${error.message}`);
              core.setFailed(error.message);
            }

  notify-completion:
    name: Notify Pipeline Completion
    needs: [detect-ai-pr, ai-review-and-approve]
    if: always()
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Update Status
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ needs.detect-ai-pr.outputs.pr-number }};
            const approvalJob = '${{ needs.ai-review-and-approve.result }}';
            
            let statusMessage = '';
            
            if (approvalJob === 'success') {
              statusMessage = \`üéØ **AI Pipeline Status Update**
              
**Issue ‚Üí PR ‚Üí Review ‚Üí Approval**: ‚úÖ **COMPLETED**
- ü§ñ AI implementation generated
- üîç Automated review completed
- ‚úÖ PR approved by AI agent
- üîÑ Auto-merge activated

**Next Steps:**
- ‚è≥ Waiting for CI/CD pipeline to complete
- ‚è≥ Auto-merge will trigger upon successful tests
- ‚è≥ Deployment to production will begin automatically
- üéâ Feature will be live within seconds of merge!

Track real-time status at: \\\`/api/ai-agent-status?pr=${prNumber}\\\`\`;
            } else {
              statusMessage = \`‚ö†Ô∏è **AI Pipeline Alert**
              
**Status**: Issue detected in automated approval process
**PR**: #${prNumber}
**Action**: Manual review may be required

Please check the workflow logs for details.\`;
            }
            
            // Update the original issue if possible
            try {
              const pr = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });
              
              // Extract issue number from PR title or body
              const issueMatch = pr.data.title.match(/#(\d+)/) || pr.data.body.match(/Closes #(\d+)/);
              
              if (issueMatch) {
                const issueNumber = parseInt(issueMatch[1]);
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issueNumber,
                  body: statusMessage
                });
              }
            } catch (error) {
              console.log('Could not update original issue:', error.message);
            }
            
            // Always comment on the PR
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: statusMessage
            });
