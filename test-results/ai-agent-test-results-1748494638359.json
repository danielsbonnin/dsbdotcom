{
  "timestamp": "2025-05-29T04:57:18.301Z",
  "summary": {
    "total": 5,
    "passed": 3,
    "failed": 2,
    "warnings": 3
  },
  "tests": {
    "workflowValidation": {
      "passed": true,
      "errors": 0,
      "warnings": 3,
      "details": {
        "issues": [],
        "warnings": [
          {
            "severity": "warning",
            "message": "Missing dependency: js-yaml",
            "context": "Consider adding to package.json"
          },
          {
            "severity": "warning",
            "message": "README should document GEMINI_API_KEY secret requirement",
            "context": ""
          },
          {
            "severity": "info",
            "message": "Consider using isBackground for long-running tasks",
            "context": ""
          }
        ]
      },
      "logs": [
        "🚀 Starting AI Agent Workflow Validation\n",
        "============================================================",
        "🔍 Validating workflow YAML syntax...",
        "✅ YAML syntax is valid",
        "🔍 Validating job dependencies...",
        "✅ Job dependencies validated",
        "🔍 Validating script files...",
        "✅ Script files validated",
        "🔍 Validating job permissions...",
        "✅ Permissions validated",
        "🔍 Validating environment configuration...",
        "✅ Environment validated",
        "🔍 Validating workflow triggers...",
        "✅ Triggers validated",
        "🔍 Checking for common issues...",
        "✅ Common issues checked",
        "\n============================================================",
        "📊 VALIDATION RESULTS",
        "============================================================",
        "\n⚠️  WARNINGS (Recommended):",
        "1. Missing dependency: js-yaml",
        "   Context: Consider adding to package.json",
        "2. README should document GEMINI_API_KEY secret requirement",
        "3. Consider using isBackground for long-running tasks",
        "\n📈 Summary: 0 errors, 3 warnings",
        "\n✅ No critical errors found. The workflow should function correctly."
      ]
    },
    "unitTests": {
      "passed": false,
      "total": 13,
      "passed_count": 3,
      "failed_count": 10,
      "errors": [
        {
          "test": "Trigger Validation - AI Agent Label",
          "error": "core.setFailed is not a function"
        },
        {
          "test": "Trigger Validation - AI Agent Mention",
          "error": "core.setFailed is not a function"
        },
        {
          "test": "Trigger Validation - No Trigger",
          "error": "core.setFailed is not a function"
        },
        {
          "test": "Duplicate Check - No Previous Processing",
          "error": "github.rest.issues.listComments.mockResolvedValue is not a function"
        },
        {
          "test": "Duplicate Check - Previous Processing Found",
          "error": "github.rest.issues.listComments.mockResolvedValue is not a function"
        },
        {
          "test": "Issue Parsing - Complete Issue",
          "error": "core.setFailed is not a function"
        },
        {
          "test": "Issue Parsing - Minimal Issue",
          "error": "core.setFailed is not a function"
        },
        {
          "test": "Start Notification",
          "error": "Cannot read properties of undefined (reading 'calls')"
        },
        {
          "test": "Failure Notification",
          "error": "Cannot read properties of undefined (reading 'calls')"
        },
        {
          "test": "End-to-End Integration",
          "error": "core.setFailed is not a function"
        }
      ],
      "logs": [
        "🚀 Starting AI Agent Test Suite\n",
        "==================================================",
        "\n🧪 Running: Trigger Validation - AI Agent Label",
        "❌ FAILED: Trigger Validation - AI Agent Label",
        "   Error: core.setFailed is not a function",
        "\n🧪 Running: Trigger Validation - AI Agent Mention",
        "❌ FAILED: Trigger Validation - AI Agent Mention",
        "   Error: core.setFailed is not a function",
        "\n🧪 Running: Trigger Validation - No Trigger",
        "❌ FAILED: Trigger Validation - No Trigger",
        "   Error: core.setFailed is not a function",
        "\n🧪 Running: Duplicate Check - No Previous Processing",
        "❌ FAILED: Duplicate Check - No Previous Processing",
        "   Error: github.rest.issues.listComments.mockResolvedValue is not a function",
        "\n🧪 Running: Duplicate Check - Previous Processing Found",
        "❌ FAILED: Duplicate Check - Previous Processing Found",
        "   Error: github.rest.issues.listComments.mockResolvedValue is not a function",
        "\n🧪 Running: Issue Parsing - Complete Issue",
        "❌ FAILED: Issue Parsing - Complete Issue",
        "   Error: core.setFailed is not a function",
        "\n🧪 Running: Issue Parsing - Minimal Issue",
        "❌ FAILED: Issue Parsing - Minimal Issue",
        "   Error: core.setFailed is not a function",
        "\n🧪 Running: Start Notification",
        "❌ FAILED: Start Notification",
        "   Error: Cannot read properties of undefined (reading 'calls')",
        "\n🧪 Running: Failure Notification",
        "❌ FAILED: Failure Notification",
        "   Error: Cannot read properties of undefined (reading 'calls')",
        "\n🧪 Running: Project Structure Analysis",
        "✓ Project analysis functions are properly structured",
        "✅ PASSED: Project Structure Analysis",
        "\n🧪 Running: File System Operations",
        "✓ File operations working correctly",
        "✅ PASSED: File System Operations",
        "\n🧪 Running: Configuration Files",
        "✓ All configuration files present",
        "✅ PASSED: Configuration Files",
        "\n🧪 Running: End-to-End Integration",
        "❌ FAILED: End-to-End Integration",
        "   Error: core.setFailed is not a function",
        "\n==================================================",
        "📊 TEST RESULTS",
        "==================================================",
        "Total Tests: 13",
        "✅ Passed: 3",
        "❌ Failed: 10",
        "\n🐛 FAILURES:",
        "1. Trigger Validation - AI Agent Label",
        "   core.setFailed is not a function\n",
        "2. Trigger Validation - AI Agent Mention",
        "   core.setFailed is not a function\n",
        "3. Trigger Validation - No Trigger",
        "   core.setFailed is not a function\n",
        "4. Duplicate Check - No Previous Processing",
        "   github.rest.issues.listComments.mockResolvedValue is not a function\n",
        "5. Duplicate Check - Previous Processing Found",
        "   github.rest.issues.listComments.mockResolvedValue is not a function\n",
        "6. Issue Parsing - Complete Issue",
        "   core.setFailed is not a function\n",
        "7. Issue Parsing - Minimal Issue",
        "   core.setFailed is not a function\n",
        "8. Start Notification",
        "   Cannot read properties of undefined (reading 'calls')\n",
        "9. Failure Notification",
        "   Cannot read properties of undefined (reading 'calls')\n",
        "10. End-to-End Integration",
        "   core.setFailed is not a function\n",
        "\n🎯 Success Rate: 23.1%",
        "\n⚠️  Some tests failed. Please review and fix issues before deployment."
      ]
    },
    "mockIntegration": {
      "passed": false,
      "total": 48,
      "passed_count": 47,
      "failed_count": 1,
      "logs": [
        "🚀 Starting AI Agent Mock Test\n",
        "============================================================",
        "[2025-05-29T04:57:18.329Z] 🔍 Testing trigger validation...",
        "[2025-05-29T04:57:18.329Z] Core Info: Issue #42: AI Agent trigger detected",
        "[2025-05-29T04:57:18.329Z] Core Output: issue-data",
        "  Data: \"{\\\"number\\\":42,\\\"title\\\":\\\"Create a new hero section component\\\",\\\"body\\\":\\\"### Task Type\\\\nComponent Development\\\\n\\\\n### Priority\\\\nHigh\\\\n\\\\n### Task Description\\\\nCreate a modern hero section component for the homepage with the following features:\\\\n- Eye-catching headline and subheading\\\\n- Call-to-action buttons\\\\n- Background gradient or image\\\\n- Responsive design\\\\n- Animation effects\\\\n\\\\n### Requirements\\\\n- Use TypeScript and React\\\\n- Style with Tailwind CSS\\\\n- Include hover effects and animations\\\\n- Make it responsive across all devices\\\\n- Add proper accessibility attributes\\\",\\\"labels\\\":[\\\"ai-agent\\\",\\\"enhancement\\\",\\\"frontend\\\"],\\\"author\\\":\\\"danielsbonnin\\\"}\"",
        "[2025-05-29T04:57:18.329Z] Core Output: should-process",
        "  Data: \"true\"",
        "[2025-05-29T04:57:18.329Z] ✅ Trigger validation passed",
        "[2025-05-29T04:57:18.329Z] 🔍 Testing duplicate check...",
        "[2025-05-29T04:57:18.329Z] GitHub API: List comments",
        "  Data: {\n  \"owner\": \"danielsbonnin\",\n  \"repo\": \"danielsbonnin.com\",\n  \"issue_number\": 42\n}",
        "[2025-05-29T04:57:18.329Z] Core Info: AI Agent not yet processed issue #42 - proceeding",
        "[2025-05-29T04:57:18.329Z] Core Output: should-continue",
        "  Data: \"true\"",
        "[2025-05-29T04:57:18.329Z] ✅ Duplicate check passed",
        "[2025-05-29T04:57:18.330Z] 🔍 Testing issue parsing...",
        "[2025-05-29T04:57:18.330Z] Core Info: Parsed task data: {\n  \"issueNumber\": 42,\n  \"title\": \"Create a new hero section component\",\n  \"description\": \"Requirements\\n- Use TypeScript and React\\n- Style with Tailwind CSS\\n- Include hover effects and animations\\n- Make it responsive across all devices\\n- Add proper accessibility attributes\",\n  \"taskType\": \"Priority\",\n  \"priority\": \"Medium\",\n  \"requirements\": null,\n  \"author\": \"danielsbonnin\",\n  \"labels\": [\n    \"ai-agent\",\n    \"enhancement\",\n    \"frontend\"\n  ],\n  \"createdAt\": \"2025-05-28T10:00:00Z\"\n}",
        "[2025-05-29T04:57:18.330Z] Core Output: task-data",
        "  Data: \"{\\\"issueNumber\\\":42,\\\"title\\\":\\\"Create a new hero section component\\\",\\\"description\\\":\\\"Requirements\\\\n- Use TypeScript and React\\\\n- Style with Tailwind CSS\\\\n- Include hover effects and animations\\\\n- Make it responsive across all devices\\\\n- Add proper accessibility attributes\\\",\\\"taskType\\\":\\\"Priority\\\",\\\"priority\\\":\\\"Medium\\\",\\\"requirements\\\":null,\\\"author\\\":\\\"danielsbonnin\\\",\\\"labels\\\":[\\\"ai-agent\\\",\\\"enhancement\\\",\\\"frontend\\\"],\\\"createdAt\\\":\\\"2025-05-28T10:00:00Z\\\"}\"",
        "[2025-05-29T04:57:18.330Z] ✅ Issue parsing passed",
        "  Data: {\n  \"title\": \"Create a new hero section component\",\n  \"type\": \"Priority\",\n  \"priority\": \"Medium\"\n}",
        "[2025-05-29T04:57:18.330Z] 🔍 Testing notifications...",
        "[2025-05-29T04:57:18.330Z] GitHub API: Create comment",
        "  Data: {\n  \"issue\": 42,\n  \"bodyPreview\": \"🤖 **AI Agent Assigned**\\n  \\nI've been assigned to work on this task. I'll analyze the requirements a...\"\n}",
        "[2025-05-29T04:57:18.330Z] GitHub API: Add labels",
        "  Data: {\n  \"issue_number\": 42,\n  \"owner\": \"danielsbonnin\",\n  \"repo\": \"danielsbonnin.com\",\n  \"labels\": [\n    \"in-progress\",\n    \"ai-working\"\n  ]\n}",
        "[2025-05-29T04:57:18.330Z] ✅ Start notification sent",
        "[2025-05-29T04:57:18.330Z] GitHub API: Create comment",
        "  Data: {\n  \"issue\": 42,\n  \"bodyPreview\": \"❌ **AI Agent Processing Failed**\\n      \\n      I encountered an error while processing this task. Ple...\"\n}",
        "[2025-05-29T04:57:18.330Z] GitHub API: Remove label",
        "  Data: {\n  \"issue_number\": 42,\n  \"owner\": \"danielsbonnin\",\n  \"repo\": \"danielsbonnin.com\",\n  \"name\": \"ai-working\"\n}",
        "[2025-05-29T04:57:18.330Z] GitHub API: Add labels",
        "  Data: {\n  \"issue_number\": 42,\n  \"owner\": \"danielsbonnin\",\n  \"repo\": \"danielsbonnin.com\",\n  \"labels\": [\n    \"ai-failed\"\n  ]\n}",
        "[2025-05-29T04:57:18.330Z] ✅ Failure notification validated",
        "[2025-05-29T04:57:18.330Z] 🔍 Testing AI implementation (mocked)...",
        "[2025-05-29T04:57:18.330Z] ✅ Mock file created: src/components/HeroSection.tsx",
        "[2025-05-29T04:57:18.330Z] ✅ Mock file created: src/components/HeroSection.module.css",
        "[2025-05-29T04:57:18.331Z] ✅ Mock implementation completed",
        "  Data: {\n  \"filesCreated\": 2,\n  \"summaryFile\": \"C:\\\\code\\\\danielsbonnin.com\\\\temp-test\\\\AI_IMPLEMENTATION.md\"\n}",
        "[2025-05-29T04:57:18.331Z] 🔍 Testing pull request creation...",
        "[2025-05-29T04:57:18.331Z] GitHub API: Create pull request",
        "  Data: {\n  \"title\": \"🤖 AI Implementation: Create a new hero section component\",\n  \"head\": \"ai-task-42-mock\",\n  \"base\": \"main\"\n}",
        "Created pull request #628",
        "[2025-05-29T04:57:18.331Z] GitHub API: Create comment",
        "  Data: {\n  \"issue\": 42,\n  \"bodyPreview\": \"✅ **AI Implementation Complete!**\\n\\n🚀 **Pull Request:** #628\\n\\nThe AI agent has successfully analyzed...\"\n}",
        "[2025-05-29T04:57:18.331Z] GitHub API: Add labels",
        "  Data: {\n  \"issue_number\": 42,\n  \"owner\": \"danielsbonnin\",\n  \"repo\": \"danielsbonnin.com\",\n  \"labels\": [\n    \"ai-implemented\",\n    \"ready-for-review\"\n  ]\n}",
        "[2025-05-29T04:57:18.331Z] GitHub API: Remove label",
        "  Data: {\n  \"issue_number\": 42,\n  \"owner\": \"danielsbonnin\",\n  \"repo\": \"danielsbonnin.com\",\n  \"name\": \"ai-working\"\n}"
      ]
    },
    "configuration": {
      "passed": true,
      "total": 11,
      "passed_count": 9,
      "failed_count": 2,
      "critical_failures": 0,
      "checks": [
        {
          "name": "File exists: .github/workflows/ai-agent.yml",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: .github/scripts/ai-agent/validate-trigger.js",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: .github/scripts/ai-agent/check-duplicate.js",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: .github/scripts/ai-agent/parse-issue.js",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: .github/scripts/ai-agent/notifications.js",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: .github/scripts/ai-agent/generate-implementation.js",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: .github/scripts/ai-agent/create-pr.js",
          "passed": true,
          "critical": true
        },
        {
          "name": "File exists: package.json",
          "passed": true,
          "critical": true
        },
        {
          "name": "Dependency: @google/generative-ai",
          "passed": true,
          "critical": true
        },
        {
          "name": "GEMINI_API_KEY documented",
          "passed": false,
          "critical": false
        },
        {
          "name": "Git available",
          "passed": false,
          "critical": false
        }
      ]
    },
    "performance": {
      "passed": true,
      "total": 3,
      "passed_count": 3,
      "failed_count": 0,
      "benchmarks": [
        {
          "name": "Module Loading",
          "time": 0,
          "threshold": 1000,
          "passed": true
        },
        {
          "name": "Mock API Operations",
          "time": 2,
          "threshold": 5000,
          "passed": true
        },
        {
          "name": "File Operations",
          "time": 0,
          "threshold": 100,
          "passed": true
        }
      ]
    }
  },
  "recommendations": []
}